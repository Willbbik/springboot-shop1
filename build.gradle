plugins {
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" // querydsl
	id 'java'
}

group = 'com.ecommerce'
version = '0.0.1-SNAPSHOT-' + new Date().format("yyyyMMddHHmmss")
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.apache.httpcomponents:httpcore:4.4.6' 	// 카카오
	implementation 'org.apache.httpcomponents:httpclient:4.5.2' // 카카오
	implementation 'com.google.code.gson:gson:2.8.7'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	implementation 'net.nurigo:javaSDK:2.2'					// Coolsms 메시지 라이브러리
	implementation 'io.springfox:springfox-swagger2:2.9.2'  // 설명 어노테이션 달기 위해서
	implementation 'org.modelmapper:modelmapper:2.4.4'		// entity를 dto로 바꾸기위해서
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' // oauth2
	implementation 'com.querydsl:querydsl-jpa'				// querydsl
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'   //query parameter log
	implementation 'commons-io:commons-io:2.6'				// Commons-파일 업로드

	//멀티 파일 업로드
	compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.3'

	compileOnly 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	runtimeOnly 'mysql:mysql-connector-java'

	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude module: 'junit'
	}

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'


}


test {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

tasks.withType(JavaCompile){
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}